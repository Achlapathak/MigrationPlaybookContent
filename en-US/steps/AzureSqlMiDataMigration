<!--Migrate data-->

When your schema has been successfully migrated to the target, the next step is to execute the data movement by using the Azure Database Migration Service (Azure DMS).

### Prerequisites

To complete this part of the migration process, be sure that you have the addressed the following prerequisites.
- Create a VNET for the Azure Database Migration Service by using the Azure Resource Manager deployment model, which provides site-to-site connectivity to your on-premises source servers by using either [ExpressRoute](https://docs.microsoft.com/azure/expressroute/expressroute-introduction) or [VPN](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-about-vpngateways). [Learn network topologies for Azure SQL DB Managed Instance migrations using the Azure Database Migration Service](https://aka.ms/dmsnetworkformi). For more information about how to create the VNET in the Azure portal, see [Create a virtual network with multiple subnets using the Azure portal](https://aka.ms/DMSVnet).
- Ensure that your Azure Virtual Network (VNET) Network Security Group rules do not block the following communication ports 443, 53, 9354, 445, 12000. For more detail on Azure VNET NSG traffic filtering, see the article [Filter network traffic with network security groups](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg).
- Configure your [Windows Firewall for source database engine access](https://docs.microsoft.com/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access).
- Open your Windows Firewall to allow the Azure Database Migration Service to access the source SQL Server, which by default is TCP port 1433.
- If you are running multiple named SQL Server instances using dynamic ports, you may wish to enable the SQL Browser Service and allow access to UDP port 1434 through your firewalls so that the Azure Database Migration Service can connect to a named instance on your source server.
- If you are using a firewall appliance in front of your source databases, you may need to add firewall rules to allow the Azure Database Migration Service to access the source database(s) for migration, as well as files via SMB port 445.
- Create an instance of Azure SQL Database Managed Instance by following the detail in the article [Create an Azure SQL Database Managed Instance in the Azure portal](https://aka.ms/sqldbmi).
- Ensure that the logins used to connect the source SQL Server and target Managed Instance are members of the sysadmin server role.
- Create a network share that the Azure Database Migration Service can use to back up the source database.
- Ensure that the service account running the source SQL Server instance has write privileges on the network share that you created.
- Make a note of a Windows user (and password) that has full control privilege on the network share that you created above. The Azure Database Migration Service impersonates the user credential to upload the backup files to Azure storage container for restore operation.
- Create a blob container and retrieve its SAS URI by using the steps in the article [Manage Azure Blob Storage resources with Storage Explorer (Preview)](https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-explorer-blobs#get-the-sas-for-a-blob-container), be sure to select all permissions (Read, Write, Delete, List) on the policy window while creating the SAS URI. This provides the Azure Database Migration Service with access to your storage account container for uploading the backup files used for migrating databases to Azure SQL Database Managed Instance.
 
### Steps

To migrate your source SQL Server on-premises database to Azure SQL Database Managed Instance by using the Azure Database Migration Service, perform the following steps.

1. If you haven't already, register the **Microsoft.DataMigration resource provider**.
    
    a. Log in to the Azure portal, select **All services**, and then select **Subscriptions**.
    
    ![RP Registration](https://mpbdevcontent.azureedge.net/Images/mi1-portal-select-subscription.png)  
    
    b. Select the subscription in which you want to create the instance of the Azure DMS, and then select **Resource providers**.
    
    ![RP Registration](https://mpbdevcontent.azureedge.net/Images/mi2-portal-select-resource-provider.png)  
    
    c. Search for migration, and then to the right of **Microsoft.DataMigration**, select **Register**.
    
    ![RP Registration](https://mpbdevcontent.azureedge.net/Images/mi3-portal-register-resource-provider.png)  

2. Create an instance of the Azure Database Migration Service.

    a. In the Azure portal, select **+ Create a resource**, search for **Azure Database Migration Service**, and then select **Azure Database Migration Service** from the drop-down list.
    
    ![Azure portal](https://mpbdevcontent.azureedge.net/Images/mi4-portal-marketplace.png)    

    b. On the **Azure Data Migration Service (preview)** screen, select **Create**.

    ![New DMS service creation](https://mpbdevcontent.azureedge.net/Images/mi5-dms-create.png)
    
    c. On the **Database Migration Service** screen, specify a name for the service, the subscription, the resouce group, a virtual network, and the pricing tier.

    For more information on costs and pricing tiers, see the [pricing](https://aka.ms/dms-pricing) page. *The Azure Database Migration Service is currently in preview, and you will not be charged.*

    ![New DMS instance creation](https://mpbdevcontent.azureedge.net/Images/mi6-dms-create-service.png)

    d. Select **Create** to create an instance of the service.
 
3. Create a **migration project**.

    a. Select **+ New Migration Project**, specify a name for the project, select **SQL Server** as the source and **Azure SQL Database Managed Instance** as the target.
    
    ![New DMS migration project](https://mpbdevcontent.azureedge.net/Images/mi7-dms-create-project.png)

    b. Select **Create** to create the project.

4. Specify **source details**.

    a. On the **Source details** screen, specify the connection details for the source SQL Server 2016 Express edition.
    
    ![Specify source details](https://mpbdevcontent.azureedge.net/Images/mi8-dms-source-details.png)    
    
    b. Select **Save**, and then select the database for migration. 
    
    ![Specify database to migrate](https://mpbdevcontent.azureedge.net/Images/mi9-dms-source-database.png)    
    
5. Specify **target details**.

    a. Select **Save**, and then on the **Target details** screen, specify the connection details for the target, which is the Azure SQL Database Managed Instance to which the source database will be migrated.  

    ![Specify target details](https://mpbdevcontent.azureedge.net/Images/mi10-dms-target-details.png) 
    
    b. Select **Save** to save the project.
    
    c. On the **Migration summary** screen, review and verify the details associated with the migration project, and then select **Save**.
    
6. **Run the migration** activity.

    a. Select the recently saved project, select **+ New Activity**, and then select **Run migration**.
    
    ![Run Migration](https://mpbdevcontent.azureedge.net/Images/mi11-dms-create-new-activity.png) 
    
    b.	When prompted, enter the credentials for the source and the target servers, and then select **Save**.
    
    c. On the **Select source databases** screen, select the source database(s) that you want to migrate.
    
    If the target database contains the same database name as the source database, Azure DMS selects the target database by default.
    
    ![Map target databases](https://mpbdevcontent.azureedge.net/Images/mi12-dms-select-source-databases.png) 
    
    d. Select **Save**, and then on the **Configure migration settings** screen, provide the following detail:
    
        - **Server backup location**. The local network share that the Azure Database Migration Service can take the source database backups to. The service account running source SQL Server instance must have write privileges on this network share.

        - **User name**. The windows user name that the Azure Database Migration Service can impersonate and upload the backup files to Azure storage container for restore operation. 

        - *Password**. Password for the above user.

        - **Storage SAS URI**. SAS URI that provides the Azure Database Migration Service with access to your storage account container to which the service uploads the back-up files and that is used for migrating databases to Azure SQL Database Managed Instance. [Learn how to get the SAS URI for blob container](https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-explorer-blobs#get-the-sas-for-a-blob-container).

    ![Configure migration settings](https://mpbdevcontent.azureedge.net/Images/mi13-dms-configure-migration-settings.png) 
    
    e. Select **Save**, and then on the **Migration summary** screen, in the **Activity name** text box, specify a name for the migration activity.
               
    f. Select **Save**, and then review the summary to ensure that the source and target details match what you previously specified.
    
     ![Specify the activity name](https://mpbdevcontent.azureedge.net/Images/mi14-dms-migration-summary.png)
       
    g. Select **Run migration** to start the migration activity.

7. **Monitor the migration**.

    a. Select the migration activity to review the status of the activity.

    ![Target summary](https://mpbdevcontent.azureedge.net/Images/mi15-dms-monitor-migration.png) 
    
    b. After the migration completes, werify the target database(s) on the target Azure SQL Database Managed Instance.
    