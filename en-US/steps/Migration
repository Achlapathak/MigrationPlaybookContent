<!--Migrate-->

### Overview

After you have completed assessing your databases and addressing any discrepancies, the next step is to execute the migration process. Migration involves two steps – publishing the schema and migrating the data. SSMA for Oracle is the correct tool to use for this process.

### Process

To use SSMA for Oracle to publish the database schema and migrate the data, perform the following steps.

1. Publish the schema to SQL Server.

  a.	After schema conversion you can save this project locally for an offline schema remediation exercise. You can do so by choosing "Save Project" from the "File" menu. This gives you an opportunity to evaluate the source and target schemas offline and perform remediation before you can publish the schema to SQL Server.

  b.	To Publish the schema, select the database from the "Databases" node in the "SQL Server Metadata Explorer" and choose "Synchronize with Database" from the right-click menu options
  
  ![Image Alt Text Synchronize with Database](https://mpbdevcontent.azureedge.net/Images/publishschema.png)
  
  c. This action will publish the Oracle schema to the SQL Server instance.


2. Migrate data to SQL Server.

  a.	After publishing the schema to the SQL Server instance, select the Oracle schema from the "Oracle Metadata Explorer” and choose "Migrate Data" from the right-click menu options or the menu bar on the top.
  
  b.	At this step you will be required to provide connection details for Oracle and SQL Server in their respective connection dialogs to migrate the data.
  
  ![Image Alt Text Migrate Data](https://mpbdevcontent.azureedge.net/Images/migratedata.png)
  
  c. After the migration is complete you will be able to view the "Data Migration report".
  
  ![Image Alt Text Data Migration Report](https://mpbdevcontent.azureedge.net/Images/migrationreport.png)
  
  d. Validate the migration by reviewing the data and schema on the SQL Server instance by using SQL Server Management Studio (SSMS).

  ![Image Alt Text Validate in SSMA](https://mpbdevcontent.azureedge.net/Images/migratedatacomplete.png)

**Important**: SSMA does not support migration of all Oracle features. For associated workarounds, see the following resource:

* [Migration approach for selected Oracle features](https://blogs.msdn.microsoft.com/datamigration/2017/05/10/migration-approach-for-oracle-features/)

 SSMA is not the only option for migrating data, though. You could also use SQL Server Integration Services (SSIS).

**Note**: For complete step-by-step guidance on publishing the schema and migrating the data, see the following resource:

* [SQL Server Migration Assistant: How to assess and migrate data from non-Microsoft data platforms to SQL Server](https://blogs.msdn.microsoft.com/datamigration/2016/11/16/sql-server-migration-assistant-how-to-assess-and-migrate-databases-from-non-microsoft-data-platforms-to-sql-server/)
* [Getting Started with SQL Server Integration Services](https://docs.microsoft.com/en-us/sql/integration-services/sql-server-integration-services)
* [SQL Server Integration Services: SSIS for Azure and Hybrid Data Movement](http://download.microsoft.com/download/D/2/0/D20E1C5F-72EA-4505-9F26-FEF9550EFD44/SSIS%20Hybrid%20and%20Azure.docx)

### Near zero downtime migrations with Attunity Replicate!

Microsoft has partnered with Attunity around specific migration scenarios (source/target pairs). Attunity Replicate supports a very large set of sources and targets. The edition of Attunity Replicate that we refer to in the context of this partnership is known as Attunity Replicate For Microsoft Migrations (this is an Attunity product and not a Microsoft product) and enables only the scenarios for which we are partnering for now. 

Attunity Replicate is a data replication tool that enables data sync between a variety of sources and targets. In this context, 
for each table, Attunity Replicate propagates its schema creation script and its data. It will not propagate any other artifacts (SP, triggers, functions, ….) 
and will not convert say PL/SQL code hosted in artifacts like functions/SP/triggers to T-SQL. 

Proposed sequence and usage of tools:
1.	**Convert the source Oracle database** (schema and data) to SQL Server database with tools like [SQL Server Migration Assistant](https://www.microsoft.com/en-us/download/details.aspx?id=54258) or [Azure Database Migration Service](http://sqldatabase-migrationpreview.azurewebsites.net/) or any other third party tool.
2.	**Continuously replicate data changes from the source database to the target database** with _Attunity Replicate For Microsoft Migrations_. This will help you minimize the amount of time you will need to prevent writes on the source database while you prepare to switch your applications to the target SQL Server databases.

Download link to [Attunity Replicate For Microsoft Migrations](https://www.attunity.com/products/replicate/attunity-replicate-for-microsoft-migration) offering.
