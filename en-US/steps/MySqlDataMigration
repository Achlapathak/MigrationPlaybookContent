<!-- Migrate Data -->

After the schema(s) is deployed, the next step is to migrate the data. There are two ways to migrate a MySQL database to Azure Database for MySQL.

**For relatively small (<150GB for example) databases that allow for downtime during migration**, you can use dump and restore via the mysqldump utility and MySQL Workbench. For details, refer to the [Dump and restore](https://docs.microsoft.com/en-us/azure/mysql/concepts-migrate-dump-restore) article in the Azure Database for MySQL documentation.

**For relatively large databases that can’t afford downtime during migration**, you can use Attunity Replicate for Microsoft Migrations, a co-sponsored, joint offering from Attunity and Microsoft that is provided to Microsoft customers at no additional cost. Attunity Replicate for Microsoft Migrations enables minimum downtime during database migration, so that source database continues to be operational and any data changes are replicated to the target database.

Attunity Replicate is a data replication tool that enables data sync between a variety of sources and targets, propagating the schema creation script and data associated with each database table. Attunity Replicate will not propagate any other artifacts (such as SP, triggers, functions, etc.) or convert, for example, PL/SQL code hosted in such artifacts, to T-SQL.

**Note**: While Attunity Replicate supports a broad set of migration scenarios, Attunity Replicate for Microsoft Migrations is focused on support for a specific subset of source/target pairs.

**Important**: Using Attunity Replicate for Microsoft Migrations to pump data out of a database hosted on Rackspace (IaaS) is supported if the version of the source endpoint and the target are among those that are supported by Attunity Replicate.

An overview of the process for performing a minimal downtime migration includes setting up the initial load and continuous data sync from the source database to the target database by using Attunity Replicate for Microsoft Migrations. This minimizes the time that the source database must be set as read-only as you prepare to switch your applications to the target Azure Database for MySQL database.

### Prerequisites
Before beginning the process of migrating from MySQL to Azure Database for MySQL, set up an [Azure Database for MySQL server](https://docs.microsoft.com/en-us/azure/mysql/quickstart-create-mysql-server-database-using-azure-portal) with firewall rules to allow access to the database it contains.

#### On the computer running Attunity Replicate for Microsoft Migrations

##### Software requirements

- Any of the following Windows Systems:
    - Windows 7 (64-bit)
    - Windows Server 2008 R2 (64-bit)
    - Windows Server 2012 (64-bit)
    - Windows Server 2012 R2 (64-bit)
- .NET Framework 4.5.2 or later version.
- Visual C++ Redistributable for Visual Studio 2015.
    **Note**: The Attunity Replicate for Microsoft Migrations installation process prompts you to install this if the correct version is not already installed.
- The [MySQL Connector/ODBC](https://dev.mysql.com/downloads/connector/odbc/).
- Any of the following browsers:
    - Microsoft Internet Explorer version 11 or later
    - Google Chrome
    - Mozilla Firefox

##### Minimum hardware requirements

- Processor - Quad Core 
- Memory - 8GB 
- Disk - 320GB 7200RPM 
- Network - 1GB

#### On the computer running MySQL

**Steps**

1.	Update the my.ini file to enable binlog in MySQL:

    a. Find my.ini file in command prompt:
    
            cd %PROGRAMDATA%\MySQL\MySQL Server 5.7\

    b. Update #Binary Logging to point of the location of the binlog

            # Binary Logging
            log-bin=D:\MySql_Logs\BinLog

2.	Save the my.ini file, and then restart the server.

### Setting up Attunity Migration tasks

**Steps**

To set up Attunity Migration tasks, perform the following steps:
1.	Download and install the [Attunity Replicate for Microsoft Migrations](http://discover.attunity.com/download-replicate-microsoft-lp6657.html) offering.

2.	Upon successful set up, you should see the **Attunity Replicate MSM Server** and **Attunity Replicate MSM UI Server** services running in Windows Services.
 
![Image Alt Text Windows Services](https://mpbdevcontent.azureedge.net/Images/6-mysql_windows_services.png)

3.	On the **Start** menu, expand **Attunity Replicate for Microsoft Migrations**, and then select **Attunity Replicate for Microsoft Migrations Console**.

4.	On the menu bar, select **New Task**.
 
![Image Alt Text Attunity Add Task](https://mpbdevcontent.azureedge.net/Images/7-mysql_attunity_new_task.png)

5.	In the **New Text** dialog box, specify a name and description for the task.

6.	By default, the **Full Load** and **Apply Changes** task options are selected. If you only want to perform one option or the other, deselect the appropriate task option, and then select OK.

Now, let’s set up the source endpoint.

7.	On the menu bar, select **Manage Endpoint Connections**, and then select **New Endpoint Connection**.
 
![Image Alt Text Attunity New Endpoint](https://mpbdevcontent.azureedge.net/Images/8-mysql_attunity_new_endpoint.png)

8.	Specify a name for the source connection, and then for **Type**, select **MySQL**.

9.	Enter the following additional detail about the source connection:

    - **Server name**: [ServerName]
    - **Port**: 3306
    - **User name**: [UserName]
    - **Password**: [Password]
    - **Database name**: Type the database name or browse to the database.

10.	Select **Test Connection** to ensure that connectivity is successfully established.
 
![Image Alt Text Attunity Test New Endpoint](https://mpbdevcontent.azureedge.net/Images/9-mysql_attunity_new_test_endpoint.png)

Next, let’s set up the target endpoint.

11.	To set up the target database in the Attunity console, add a New Endpoint connection with the following detail:

    - **Name**: Name the target database
    - **Role**: Target
    - **Type**: Microsoft Azure Database for MySQL
    - **Server**: [ServerName]
    - **Port**: 3306
    - **User name**: [UserName]
    - **Password**: [Password]
    - **Database name**: Type the database name or browse to the database.

12.	On the **Advanced** tab, increase the **Parallel load threads** value to 5 (the default value is 1).
 
![Image Alt Text Advanced tab](https://mpbdevcontent.azureedge.net/Images/10-mysql_advanced_tab.png)

After the source and target connections are created, proceed to create a task for the sync.

13.	Drag and drop to specify the source and target for the task. 
 
![Image Alt Text Migration project diagram](https://mpbdevcontent.azureedge.net/Images/11-mysql_migrate_diagram.png)

In the above example, the source and target databases are apparent, and the icons in the center of the line indicate that the task will do a full load first, and then apply the changes from source to target for subsequent changes

14.	Select **Table Selection**, and then specify the source tables to sync.
 
![Image Alt Text Table selection](https://mpbdevcontent.azureedge.net/Images/12-mysql_table_selection.png)

15.	Save the task, and then select **Run**. 

16.	At the top-right, on the **Monitor** tab, view the status of the deployed task.
 
![Image Alt Text Monitor tab](https://mpbdevcontent.azureedge.net/Images/13-mysql_monitor_tab.png)

17.	After the tasks start running, check the target database on Azure Database for MySQL to see if the table is created and that all the rows are copied.

